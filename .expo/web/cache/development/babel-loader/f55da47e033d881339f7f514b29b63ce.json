{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nexport default function shader() {\n  var p;\n  var particles = [];\n\n  function setup() {\n    createCanvas(window.innerWidth, window.innerHeight);\n    var particlesLen = floor(window.innerWidth / 7);\n\n    for (var i = 0; i < particlesLen; i++) {\n      particles.push(new Particle());\n    }\n  }\n\n  function draw() {\n    background(220);\n    particles.forEach(function (particle, index) {\n      particle.update();\n      particle.draw();\n      particle.connect(particles.slice(index));\n    });\n  }\n\n  var Particle = function Particle(color) {\n    var _this = this;\n\n    _classCallCheck(this, Particle);\n\n    this.draw = function () {\n      fill(0);\n      circle(_this.pos.x, _this.pos.y, _this.size);\n    };\n\n    this.update = function () {\n      _this.pos.add(_this.vel);\n\n      _this.edges();\n    };\n\n    this.edges = function () {\n      if (_this.pos.x < 0 || _this.pos.x > width) {\n        _this.vel.x *= -1;\n      }\n\n      if (_this.pos.y < 0 || _this.pos.y > height) {\n        _this.vel.y *= -1;\n      }\n    };\n\n    this.connect = function (particles) {\n      particles.forEach(function (particle) {\n        var d = dist(_this.pos.x, _this.pos.y, particle.pos.x, particle.pos.y);\n\n        if (d < 120) {\n          stroke(0, 100);\n          line(_this.pos.x, _this.pos.y, particle.pos.x, particle.pos.y);\n        }\n      });\n    };\n\n    this.pos = createVector(random(0, width), random(0, height));\n    this.size = 10;\n    this.vel = createVector(random(-4, 4), random(-2, 2));\n  };\n}","map":{"version":3,"sources":["/Users/jackbocresion/Desktop/p5 shaders/shaderforreact.js"],"names":["shader","p","particles","setup","createCanvas","window","innerWidth","innerHeight","particlesLen","floor","i","push","Particle","draw","background","forEach","particle","index","update","connect","slice","color","fill","circle","pos","x","y","size","add","vel","edges","width","height","d","dist","stroke","line","createVector","random"],"mappings":"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","sourcesContent":["export default function shader(){\nlet p;\nlet particles = [];\nfunction setup() {\n  createCanvas(window.innerWidth, window.innerHeight);\n  const particlesLen = floor(window.innerWidth / 7);\n  for (let i = 0; i < particlesLen; i++) {\n    particles.push(new Particle());\n  }\n}\n\nfunction draw() {\n  background(220);\n  particles.forEach((particle, index) => {\n    particle.update();\n    particle.draw();\n    particle.connect(particles.slice(index));\n  });\n}\nclass Particle {\n  constructor(color) {\n    //position\n    //width and height are native variables in p5\n    this.pos = createVector(random(0, width), random(0, height));\n    this.size = 10;\n    this.vel = createVector(random(-4, 4), random(-2, 2));\n  }\n  draw = () => {\n    fill(0)\n    circle(this.pos.x, this.pos.y, this.size);\n  };\n\n  update = () => {\n    this.pos.add(this.vel);\n    this.edges();\n  };\n  edges = () => {\n    if (this.pos.x < 0 || this.pos.x > width) {\n      this.vel.x *= -1;\n    }\n    if (this.pos.y < 0 || this.pos.y > height) {\n      this.vel.y *= -1;\n    }\n  };\n  //connections\n  connect = (particles) => {\n    particles.forEach((particle) => {\n      const d = dist(this.pos.x, this.pos.y, particle.pos.x, particle.pos.y);\n      if (d < 120) {\n        stroke(0, 100);\n        line(this.pos.x, this.pos.y, particle.pos.x, particle.pos.y);\n      }\n    });\n  };\n}\n\n}"]},"metadata":{},"sourceType":"module"}